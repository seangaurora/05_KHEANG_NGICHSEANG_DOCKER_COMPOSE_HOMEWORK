version: '3.8'

services:
  app:
    image: 'api-img'
    build:
      context: .
    container_name: spring-container
    depends_on:
      - db
    environment:
      # - POSTGRES_USER=postgres
      # - POSTGRES_PASSWORD=tech
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/expense_tracking
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=tech
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

    ports:
      - "8085:8080" 

  db:
    image: postgres
    container_name: postgres_container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=tech
      - POSTGRES_DB=expense_tracking
    ports:
      - "5433:5432"


#--------------- Keycloak ---------------#

  keycloak-db-container:
    image: postgres:16.2
    volumes:
      - keycloak-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tech
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    container_name: keycloak_container
    command: start-dev
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db-container/keycloak-db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: tech
    ports:
      - "8080:8080"
      - "8443:8443"
    restart: always
    depends_on:
      - keycloak-db-container
    networks:
      - keycloak_network


#--------------- RabbitMQ ---------------#
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672    


networks:
  keycloak_network:
    driver: bridge

volumes:
  keycloak-volume:
    driver: local